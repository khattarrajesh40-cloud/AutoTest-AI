{"ast":null,"code":"import { getUserAgent } from \"universal-user-agent\";\nimport Hook from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version.js\";\nconst noop = () => {};\nconst consoleWarn = console.warn.bind(console);\nconst consoleError = console.error.bind(console);\nfunction createLogger(logger = {}) {\n  if (typeof logger.debug !== \"function\") {\n    logger.debug = noop;\n  }\n  if (typeof logger.info !== \"function\") {\n    logger.info = noop;\n  }\n  if (typeof logger.warn !== \"function\") {\n    logger.warn = consoleWarn;\n  }\n  if (typeof logger.error !== \"function\") {\n    logger.error = consoleError;\n  }\n  return logger;\n}\nconst userAgentTrail = `octokit-core.js/${VERSION} ${getUserAgent()}`;\nclass Octokit {\n  static VERSION = VERSION;\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {\n          userAgent: `${options.userAgent} ${defaults.userAgent}`\n        } : null));\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static plugins = [];\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static plugins = currentPlugins.concat(newPlugins.filter(plugin => !currentPlugins.includes(plugin)));\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Hook.Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = createLogger(options.log);\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const {\n        authStrategy,\n        ...otherOptions\n      } = options;\n      const auth = authStrategy(Object.assign({\n        request: this.request,\n        log: this.log,\n        // we pass the current octokit instance as well as its constructor options\n        // to allow for authentication strategies that return a new octokit instance\n        // that shares the same internal state as the current one. The original\n        // requirement for this was the \"event-octokit\" authentication strategy\n        // of https://github.com/probot/octokit-auth-probot.\n        octokit: this,\n        octokitOptions: otherOptions\n      }, options.auth));\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    for (let i = 0; i < classConstructor.plugins.length; ++i) {\n      Object.assign(this, classConstructor.plugins[i](this, options));\n    }\n  }\n  // assigned during constructor\n  request;\n  graphql;\n  log;\n  hook;\n  // TODO: type `octokit.auth` based on passed options.authStrategy\n  auth;\n}\nexport { Octokit };","map":{"version":3,"names":["getUserAgent","Hook","request","withCustomRequest","createTokenAuth","VERSION","noop","consoleWarn","console","warn","bind","consoleError","error","createLogger","logger","debug","info","userAgentTrail","Octokit","defaults","OctokitWithDefaults","constructor","args","options","Object","assign","userAgent","plugins","plugin","newPlugins","currentPlugins","NewOctokit","concat","filter","includes","hook","Collection","requestDefaults","baseUrl","endpoint","DEFAULTS","headers","mediaType","previews","format","timeZone","graphql","log","authStrategy","auth","type","wrap","otherOptions","octokit","octokitOptions","classConstructor","i","length"],"sources":["C:/Users/sharm/OneDrive/Desktop/workik_AI/node_modules/@octokit/core/dist-src/index.js"],"sourcesContent":["import { getUserAgent } from \"universal-user-agent\";\nimport Hook from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version.js\";\nconst noop = () => {\n};\nconst consoleWarn = console.warn.bind(console);\nconst consoleError = console.error.bind(console);\nfunction createLogger(logger = {}) {\n  if (typeof logger.debug !== \"function\") {\n    logger.debug = noop;\n  }\n  if (typeof logger.info !== \"function\") {\n    logger.info = noop;\n  }\n  if (typeof logger.warn !== \"function\") {\n    logger.warn = consoleWarn;\n  }\n  if (typeof logger.error !== \"function\") {\n    logger.error = consoleError;\n  }\n  return logger;\n}\nconst userAgentTrail = `octokit-core.js/${VERSION} ${getUserAgent()}`;\nclass Octokit {\n  static VERSION = VERSION;\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(\n          Object.assign(\n            {},\n            defaults,\n            options,\n            options.userAgent && defaults.userAgent ? {\n              userAgent: `${options.userAgent} ${defaults.userAgent}`\n            } : null\n          )\n        );\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static plugins = [];\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static plugins = currentPlugins.concat(\n        newPlugins.filter((plugin) => !currentPlugins.includes(plugin))\n      );\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Hook.Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = createLogger(options.log);\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const { authStrategy, ...otherOptions } = options;\n      const auth = authStrategy(\n        Object.assign(\n          {\n            request: this.request,\n            log: this.log,\n            // we pass the current octokit instance as well as its constructor options\n            // to allow for authentication strategies that return a new octokit instance\n            // that shares the same internal state as the current one. The original\n            // requirement for this was the \"event-octokit\" authentication strategy\n            // of https://github.com/probot/octokit-auth-probot.\n            octokit: this,\n            octokitOptions: otherOptions\n          },\n          options.auth\n        )\n      );\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    for (let i = 0; i < classConstructor.plugins.length; ++i) {\n      Object.assign(this, classConstructor.plugins[i](this, options));\n    }\n  }\n  // assigned during constructor\n  request;\n  graphql;\n  log;\n  hook;\n  // TODO: type `octokit.auth` based on passed options.authStrategy\n  auth;\n}\nexport {\n  Octokit\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}